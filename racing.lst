0001   0000             ;; zx81 -fibonacci 
0002   0000             
0003   0000             #include "zx81defs.asm" ;; https://www.sinclairzxworld.com/viewtopic.php?t=2186&start=40
0001+  0000             ;defines to make us feel more at home
0002+  0000             #define         DEFB .BYTE 
0003+  0000             #define         DEFW .WORD
0004+  0000             #define         DEFM .TEXT
0005+  0000             #define         ORG  .ORG
0006+  0000             #define         EQU  .EQU
0004   0000             ;EQUs for ROM routines
0005   0000             #include "zx81rom.asm"
0001+  0000             ;ZX81 ROM routines 
0002+  0000             PRINT			EQU $10
0003+  0000             PRINTAT			EQU $08F5
0004+  0000             DISPROUT		EQU $0281
0005+  0000             ;D_FILE			EQU	$400C
0006+  0000             DISPLAY_3		EQU $0292 ;restore registers after a 'slow' display
0007+  0000             DISPLAY_5		EQU $02B5
0008+  0000             PLOT			EQU $0BB2 	; note ROM plot is 0baf - however first thing it does try to pull BC from the calculator stack
0009+  0000             							; so we'll skip past that and set BC ourselves
0010+  0000             CLS				EQU $0A2A
0011+  0000             KSCAN           EQU $02BB 
0012+  0000             FINDCHR         EQU $07BD
0013+  0000             COPY            EQU $0869
0014+  0000             FAST            EQU $0F23
0015+  0000             SLOW            EQU $0F2B
0016+  0000             SLOWORFAST		EQU $0207
0017+  0000             PAUSE			EQU $0F32
0018+  0000             SCROLL 			EQU $0C0E
0019+  0000             ;sys vars
0020+  0000             ERR_NR			EQU $40000006   0000             ;ZX81 char codes/how to survive without ASCII
0007   0000             #include "charcodes.asm"
0001+  0000             ; ZX81 Characters. 
0002+  0000             __:				EQU	$00	;spacja
0003+  0000             _QT:			EQU	$0B	;"
0004+  0000             _PD:			EQU	$0C	;funt 
0005+  0000             _SD:			EQU	$0D	;$
0006+  0000             _CL:			EQU	$0E	;:
0007+  0000             _QM:			EQU	$0F	;?
0008+  0000             _OP:			EQU	$10	;(
0009+  0000             _CP:			EQU	$11	;)
0010+  0000             _GT:			EQU	$12	;>
0011+  0000             _LT:			EQU	$13	;<
0012+  0000             _EQ:			EQU	$14	;=
0013+  0000             _PL:			EQU	$15	;+
0014+  0000             _MI:			EQU	$16	;-
0015+  0000             _AS:			EQU	$17	;*
0016+  0000             _SL:			EQU	$18	;/
0017+  0000             _SC:			EQU	$19	;;
0018+  0000             _CM:			EQU	$1A	;,
0019+  0000             _DT:			EQU	$1B	;.
0020+  0000             _NL:			EQU	$76	;NEWLINE
0021+  0000             
0022+  0000             _0				EQU $1C
0023+  0000             _1				EQU $1D
0024+  0000             _2				EQU $1E
0025+  0000             _3				EQU $1F
0026+  0000             _4				EQU $20
0027+  0000             _5				EQU $21
0028+  0000             _6				EQU $22
0029+  0000             _7				EQU $23
0030+  0000             _8				EQU $24
0031+  0000             _9				EQU $25
0032+  0000             _A				EQU $26
0033+  0000             _B				EQU $27
0034+  0000             _C				EQU $28
0035+  0000             _D				EQU $29
0036+  0000             _E				EQU $2A
0037+  0000             _F				EQU $2B
0038+  0000             _G				EQU $2C
0039+  0000             _H				EQU $2D
0040+  0000             _I				EQU $2E
0041+  0000             _J				EQU $2F
0042+  0000             _K				EQU $30
0043+  0000             _L				EQU $31
0044+  0000             _M				EQU $32
0045+  0000             _N				EQU $33
0046+  0000             _O				EQU $34
0047+  0000             _P				EQU $35
0048+  0000             _Q				EQU $36
0049+  0000             _R				EQU $37
0050+  0000             _S				EQU $38
0051+  0000             _T				EQU $39
0052+  0000             _U				EQU $3A
0053+  0000             _V				EQU $3B
0054+  0000             _W				EQU $3C
0055+  0000             _X				EQU $3D
0056+  0000             _Y				EQU $3E
0057+  0000             _Z				EQU $3F
0008   0000             ;system variables
0009   0000             #include "zx81sys.asm"
0001+  0000             ;system variables
0002+  0000             ;Origin of a ZX81 file is always 16393 
0003+  0000             
0004+  4009                             ORG 16393
0005+  4009                             
0006+  4009             ; System variables live here
0007+  4009 00          VERSN:          DEFB 0
0008+  400A 02 00       E_PPC:          DEFW 2
0009+  400C 3C 41       D_FILE:         DEFW Display
0010+  400E 3D 41       DF_CC:          DEFW Display+1                  ; First character of display
0011+  4010 55 44       VARS:           DEFW Variables
0012+  4012 00 00       DEST:           DEFW 0
0013+  4014 56 44       E_LINE:         DEFW BasicEnd 
0014+  4016 5A 44       CH_ADD:         DEFW BasicEnd+4                 ; Simulate SAVE "X"
0015+  4018 00 00       X_PTR:          DEFW 0
0016+  401A 5B 44       STKBOT:         DEFW BasicEnd+5
0017+  401C 5B 44       STKEND:         DEFW BasicEnd+5                 ; Empty stack
0018+  401E 00          BREG:           DEFB 0
0019+  401F 5D 40       MEM:            DEFW MEMBOT
0020+  4021 00          UNUSED1:        DEFB 0
0021+  4022 02          DF_SZ:          DEFB 2
0022+  4023 02 00       S_TOP:          DEFW $0002                      ; Top program line number
0023+  4025 BF FD       LAST_K:         DEFW $fdbf
0024+  4027 0F          DEBOUN:         DEFB 15
0025+  4028 37          MARGIN:         DEFB 55
0026+  4029 2A 41       NXTLIN:         DEFW Line2                      ; Next line address
0027+  402B 00 00       OLDPPC:         DEFW 0
0028+  402D 00          FLAGX:          DEFB 0
0029+  402E 00 00       STRLEN:         DEFW 0
0030+  4030 8D 0C       T_ADDR:         DEFW $0c8d
0031+  4032 00 00       SEED:           DEFW 0
0032+  4034 A3 F5       FRAMES:         DEFW $f5a3
0033+  4036 00 00       COORDS:         DEFW 0
0034+  4038 BC          PR_CC:          DEFB $bc
0035+  4039 21 18       S_POSN:         DEFW $1821
0036+  403B 40          CDFLAG:         DEFB $40
0037+  403C 00 00 00 00 PRBUFF:         DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,$76 ; 32 Spaces + Newline
0037+  4040 00 00 00 00 
0037+  4044 00 00 00 00 
0037+  4048 00 00 00 00 
0037+  404C 00 00 00 00 
0037+  4050 00 00 00 00 
0037+  4054 00 00 00 00 
0037+  4058 00 00 00 00 
0037+  405C 76 
0038+  405D 00 00 00 00 MEMBOT:         DEFB 0,0,0,0,0,0,0,0,0,0,$84,$20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ; 30 zeros
0038+  4061 00 00 00 00 
0038+  4065 00 00 84 20 
0038+  4069 00 00 00 00 
0038+  406D 00 00 00 00 
0038+  4071 00 00 00 00 
0038+  4075 00 00 00 00 
0038+  4079 00 00 
0039+  407B 00 00       UNUNSED2:       DEFW 0
0040+  407D             
0041+  407D             ; End of system variables
0042+  407D             
0010   407D             
0011   407D             ;the standard REM statement that will contain our 'hex' code
0012   407D             #include "line1.asm"
0001+  407D             ;Line 1 
0002+  407D             ;this is the REM statement...
0003+  407D 00 00       Line1:          DEFB $00,$00                    ; Line 1
0004+  407F A9 00                       DEFW Line1End-Line1Text         ; Line 1 length
0005+  4081 EA          Line1Text:      DEFB $ea                        ; REM             
0006+  4082             
0013   4082             
0014   4082             
0015   4082 C3 85 40    	jp main
0016   4085             	
0017   4085             main
0018   4085             	
0019   4085 F3          	di
0020   4086 21 09 58    	ld hl, 22537 ;initialise road
0021   4089 E5          	push hl  ;save road posn
0022   408A AF          	xor a
0023   408B 06 18       	ld b,24
0024   408D             fillscreen
0025   408D 77          	ld (hl),a
0026   408E 23          	inc hl
0027   408F 77          	ld (hl),a
0028   4090 11 09 00    	ld de,9
0029   4093 19          	add hl,de
0030   4094 77          	ld (hl),a
0031   4095 23          	inc hl
0032   4096 77          	ld (hl),a
0033   4097 11 15 00    	ld de,21
0034   409A 19          	add hl,de
0035   409B 10 F0       	djnz fillscreen
0036   409D 48          	ld c,b  ;initialise score
0037   409E C5          	push bc  ;save score
0038   409F 21 EE 5A    	ld hl,23278 ;initialise car
0039   40A2 3E 08       	ld a,8
0040   40A4 77          	ld (hl),a
0041   40A5 22 84 80    	ld (32900),hl ;save car posn
0042   40A8             principalloop
0043   40A8 2A 84 80    	ld hl,(32900) ;retrieve car posn
0044   40AB 3E 38       	ld a,56  ;erase car
0045   40AD 77          	ld (hl),a
0046   40AE FB          	ei
0047   40AF 01 FE FE    	ld bc,65278 ;read keyboard caps to v
0048   40B2 ED 78       	in a,(c)
0049   40B4 FE BF       	cp 191
0050   40B6 20 01       	jr nz, moveright
0051   40B8 2C          	inc l
0052   40B9             moveright
0053   40B9 01 FE 7F    	ld bc,32766 ;read keyboard space to b
0054   40BC ED 78       	in a,(c)
0055   40BE FE BF       	cp 191
0056   40C0 20 01       	jr nz, dontmove
0057   40C2 2D          	dec l
0058   40C3             dontmove
0059   40C3 F3          	di
0060   40C4 22 84 80    	ld (32900),hl ;store car posn
0061   40C7 11 20 00    	ld de, 32 ;new carposn
0062   40CA AF          	xor a  ;set carry flag to 0
0063   40CB ED 52       	sbc hl,de
0064   40CD 7E          	ld a,(hl) ;crash?
0065   40CE B7          	or a
0066   40CF 28 54       	jr z,gameover
0067   40D1 3E 08       	ld a,8  ;print car
0068   40D3 77          	ld (hl),a
0069   40D4 21 DF 5A    	ld hl,23263 ;scroll road
0070   40D7 11 FF 5A    	ld de,23295
0071   40DA 01 E0 02    	ld bc,736
0072   40DD ED B8       	lddr
0073   40DF C1          	pop bc  ;retrieve score
0074   40E0 E1          	pop hl  ;retrieve road posn
0075   40E1 E5          	push hl  ;save road posn
0076   40E2 3E 38       	ld a,56  ;delete old road
0077   40E4 77          	ld (hl),a
0078   40E5 23          	inc hl
0079   40E6 77          	ld (hl),a
0080   40E7 11 09 00    	ld de,9
0081   40EA 19          	add hl,de
0082   40EB 77          	ld (hl),a
0083   40EC 23          	inc hl
0084   40ED 77          	ld (hl),a
0085   40EE             	;random road left or right
0086   40EE 21 B0 36    	ld hl,14000 ;source of random bytes in ROM
0087   40F1 16 00       	ld d,0
0088   40F3 59          	ld e,c
0089   40F4 19          	add hl, de
0090   40F5 7E          	ld a,(hl)
0091   40F6 E1          	pop hl  ;retrieve road posn
0092   40F7 2B          	dec hl  ;move road posn 1 left
0093   40F8 E6 01       	and 1
0094   40FA 28 02       	jr z, roadleft
0095   40FC 23          	inc hl
0096   40FD 23          	inc hl
0097   40FE             roadleft
0098   40FE 7D          	ld a,l  ;check left
0099   40FF FE FF       	cp 255
0100   4101 20 02       	jr nz, checkright
0101   4103 23          	inc hl
0102   4104 23          	inc hl
0103   4105             checkright
0104   4105 7D          	ld a,l
0105   4106 FE 15       	cp 21
0106   4108 20 02       	jr nz, newroadposn
0107   410A 2B          	dec hl
0108   410B 2B          	dec hl
0109   410C             newroadposn
0110   410C E5          	push hl  ;save road posn
0111   410D AF          	xor a  ;print new road
0112   410E 77          	ld (hl),a
0113   410F 23          	inc hl
0114   4110 77          	ld (hl),a
0115   4111 11 09 00    	ld de,9
0116   4114 19          	add hl,de
0117   4115 77          	ld (hl),a
0118   4116 23          	inc hl
0119   4117 77          	ld (hl),a
0120   4118 03          	inc bc  ;add 1 to score
0121   4119 C5          	push bc  ;save score
0122   411A             	;wait routine
0123   411A 01 FF 1F    	ld bc,$1fff ;max waiting time
0124   411D             wait
0125   411D 0B          	dec bc
0126   411E 78          	ld a,b
0127   411F B1          	or c
0128   4120 20 FB       	jr nz, wait
0129   4122 C3 A8 40    	jp principalloop
0130   4125             gameover
0131   4125 C1          	pop bc  ;retrieve score
0132   4126 E1          	pop hl  ;empty stack
0133   4127 FB          	ei
0134   4128 C9          	ret     ; game and tutorial written by Jon Kingsman
0135   4129             	
0136   4129             ;include our variables
0137   4129             #include "vars.asm"
0001+  4129             ;our variables 
0002+  4129             
0138   4129             
0139   4129             ; ===========================================================
0140   4129             ; code ends
0141   4129             ; ===========================================================
0142   4129             ;end the REM line and put in the RAND USR line to call our 'hex code'
0143   4129             #include "line2.asm"
0001+  4129             ;this is the end of line 1 - the REM	 		
0002+  4129 76          				DEFB $76                        ; Newline				
0003+  412A             ;followed by the the RAND USR line				
0004+  412A             Line1End       
0005+  412A 00 0A       Line2			DEFB $00,$0a
0006+  412C 0E 00                       DEFW Line2End-Line2Text
0007+  412E F9 D4       Line2Text     	DEFB $F9,$D4                    ; RAND USR
0008+  4130 1D 22 21 1D 				DEFB $1D,$22,$21,$1D,$20        ; 16514                
0008+  4134 20 
0009+  4135 7E                          DEFB $7E                        ; Number
0010+  4136 8F 01 04 00                 DEFB $8F,$01,$04,$00,$00        ; Numeric encoding
0010+  413A 00 
0011+  413B 76                          DEFB $76                        ; Newline
0012+  413C             Line2End 
0144   413C             
0145   413C             ;display file defintion
0146   413C             #include "screen.asm"               
0001+  413C             ;ZX81 screens
0002+  413C             ; Display file (ZX81 screen) - low res screen 
0003+  413C 76          Display        	DEFB $76     
0004+  413D 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 0
0004+  4141 00 00 00 00 
0004+  4145 00 00 00 00 
0004+  4149 00 00 00 00 
0004+  414D 00 00 00 00 
0004+  4151 00 00 00 00 
0004+  4155 00 00 00 00 
0004+  4159 00 00 00 00 
0004+  415D 76 
0005+  415E 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 1
0005+  4162 00 00 00 00 
0005+  4166 00 00 00 00 
0005+  416A 00 00 00 00 
0005+  416E 00 00 00 00 
0005+  4172 00 00 00 00 
0005+  4176 00 00 00 00 
0005+  417A 00 00 00 00 
0005+  417E 76 
0006+  417F 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 2
0006+  4183 00 00 00 00 
0006+  4187 00 00 00 00 
0006+  418B 00 00 00 00 
0006+  418F 00 00 00 00 
0006+  4193 00 00 00 00 
0006+  4197 00 00 00 00 
0006+  419B 00 00 00 00 
0006+  419F 76 
0007+  41A0 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 3
0007+  41A4 00 00 00 00 
0007+  41A8 00 00 00 00 
0007+  41AC 00 00 00 00 
0007+  41B0 00 00 00 00 
0007+  41B4 00 00 00 00 
0007+  41B8 00 00 00 00 
0007+  41BC 00 00 00 00 
0007+  41C0 76 
0008+  41C1 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 4
0008+  41C5 00 00 00 00 
0008+  41C9 00 00 00 00 
0008+  41CD 00 00 00 00 
0008+  41D1 00 00 00 00 
0008+  41D5 00 00 00 00 
0008+  41D9 00 00 00 00 
0008+  41DD 00 00 00 00 
0008+  41E1 76 
0009+  41E2 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 5
0009+  41E6 00 00 00 00 
0009+  41EA 00 00 00 00 
0009+  41EE 00 00 00 00 
0009+  41F2 00 00 00 00 
0009+  41F6 00 00 00 00 
0009+  41FA 00 00 00 00 
0009+  41FE 00 00 00 00 
0009+  4202 76 
0010+  4203 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 6
0010+  4207 00 00 00 00 
0010+  420B 00 00 00 00 
0010+  420F 00 00 00 00 
0010+  4213 00 00 00 00 
0010+  4217 00 00 00 00 
0010+  421B 00 00 00 00 
0010+  421F 00 00 00 00 
0010+  4223 76 
0011+  4224 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 7
0011+  4228 00 00 00 00 
0011+  422C 00 00 00 00 
0011+  4230 00 00 00 00 
0011+  4234 00 00 00 00 
0011+  4238 00 00 00 00 
0011+  423C 00 00 00 00 
0011+  4240 00 00 00 00 
0011+  4244 76 
0012+  4245 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 8
0012+  4249 00 00 00 00 
0012+  424D 00 00 00 00 
0012+  4251 00 00 00 00 
0012+  4255 00 00 00 00 
0012+  4259 00 00 00 00 
0012+  425D 00 00 00 00 
0012+  4261 00 00 00 00 
0012+  4265 76 
0013+  4266 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 9
0013+  426A 00 00 00 00 
0013+  426E 00 00 00 00 
0013+  4272 00 00 00 00 
0013+  4276 00 00 00 00 
0013+  427A 00 00 00 00 
0013+  427E 00 00 00 00 
0013+  4282 00 00 00 00 
0013+  4286 76 
0014+  4287 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 10
0014+  428B 00 00 00 00 
0014+  428F 00 00 00 00 
0014+  4293 00 00 00 00 
0014+  4297 00 00 00 00 
0014+  429B 00 00 00 00 
0014+  429F 00 00 00 00 
0014+  42A3 00 00 00 00 
0014+  42A7 76 
0015+  42A8 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 11
0015+  42AC 00 00 00 00 
0015+  42B0 00 00 00 00 
0015+  42B4 00 00 00 00 
0015+  42B8 00 00 00 00 
0015+  42BC 00 00 00 00 
0015+  42C0 00 00 00 00 
0015+  42C4 00 00 00 00 
0015+  42C8 76 
0016+  42C9 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 12
0016+  42CD 00 00 00 00 
0016+  42D1 00 00 00 00 
0016+  42D5 00 00 00 00 
0016+  42D9 00 00 00 00 
0016+  42DD 00 00 00 00 
0016+  42E1 00 00 00 00 
0016+  42E5 00 00 00 00 
0016+  42E9 76 
0017+  42EA 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 13
0017+  42EE 00 00 00 00 
0017+  42F2 00 00 00 00 
0017+  42F6 00 00 00 00 
0017+  42FA 00 00 00 00 
0017+  42FE 00 00 00 00 
0017+  4302 00 00 00 00 
0017+  4306 00 00 00 00 
0017+  430A 76 
0018+  430B 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 14
0018+  430F 00 00 00 00 
0018+  4313 00 00 00 00 
0018+  4317 00 00 00 00 
0018+  431B 00 00 00 00 
0018+  431F 00 00 00 00 
0018+  4323 00 00 00 00 
0018+  4327 00 00 00 00 
0018+  432B 76 
0019+  432C 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 15
0019+  4330 00 00 00 00 
0019+  4334 00 00 00 00 
0019+  4338 00 00 00 00 
0019+  433C 00 00 00 00 
0019+  4340 00 00 00 00 
0019+  4344 00 00 00 00 
0019+  4348 00 00 00 00 
0019+  434C 76 
0020+  434D 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 16
0020+  4351 00 00 00 00 
0020+  4355 00 00 00 00 
0020+  4359 00 00 00 00 
0020+  435D 00 00 00 00 
0020+  4361 00 00 00 00 
0020+  4365 00 00 00 00 
0020+  4369 00 00 00 00 
0020+  436D 76 
0021+  436E 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 17
0021+  4372 00 00 00 00 
0021+  4376 00 00 00 00 
0021+  437A 00 00 00 00 
0021+  437E 00 00 00 00 
0021+  4382 00 00 00 00 
0021+  4386 00 00 00 00 
0021+  438A 00 00 00 00 
0021+  438E 76 
0022+  438F 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 18
0022+  4393 00 00 00 00 
0022+  4397 00 00 00 00 
0022+  439B 00 00 00 00 
0022+  439F 00 00 00 00 
0022+  43A3 00 00 00 00 
0022+  43A7 00 00 00 00 
0022+  43AB 00 00 00 00 
0022+  43AF 76 
0023+  43B0 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 19
0023+  43B4 00 00 00 00 
0023+  43B8 00 00 00 00 
0023+  43BC 00 00 00 00 
0023+  43C0 00 00 00 00 
0023+  43C4 00 00 00 00 
0023+  43C8 00 00 00 00 
0023+  43CC 00 00 00 00 
0023+  43D0 76 
0024+  43D1 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 20
0024+  43D5 00 00 00 00 
0024+  43D9 00 00 00 00 
0024+  43DD 00 00 00 00 
0024+  43E1 00 00 00 00 
0024+  43E5 00 00 00 00 
0024+  43E9 00 00 00 00 
0024+  43ED 00 00 00 00 
0024+  43F1 76 
0025+  43F2 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 21
0025+  43F6 00 00 00 00 
0025+  43FA 00 00 00 00 
0025+  43FE 00 00 00 00 
0025+  4402 00 00 00 00 
0025+  4406 00 00 00 00 
0025+  440A 00 00 00 00 
0025+  440E 00 00 00 00 
0025+  4412 76 
0026+  4413 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 22
0026+  4417 00 00 00 00 
0026+  441B 00 00 00 00 
0026+  441F 00 00 00 00 
0026+  4423 00 00 00 00 
0026+  4427 00 00 00 00 
0026+  442B 00 00 00 00 
0026+  442F 00 00 00 00 
0026+  4433 76 
0027+  4434 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 23
0027+  4438 00 00 00 00 
0027+  443C 00 00 00 00 
0027+  4440 00 00 00 00 
0027+  4444 00 00 00 00 
0027+  4448 00 00 00 00 
0027+  444C 00 00 00 00 
0027+  4450 00 00 00 00 
0027+  4454 76 
0028+  4455             
0147   4455             
0148   4455             ;close out the basic program
0149   4455             #include "endbasic.asm"
0001+  4455             ; close out the BASIC program structure
0002+  4455             ; BASIC Variables area 
0003+  4455             Variables:      
0004+  4455 80          VariablesEnd:   DEFB $80
0005+  4456             BasicEnd:                              
0006+  4456             
0007+  4456             
0008+  4456             #END
tasm: Number of errors = 0
