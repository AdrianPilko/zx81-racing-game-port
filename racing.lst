0001   0000             ;; zx81 -fibonacci 
0002   0000             
0003   0000             #include "zx81defs.asm" ;; https://www.sinclairzxworld.com/viewtopic.php?t=2186&start=40
0001+  0000             ;defines to make us feel more at home
0002+  0000             #define         DEFB .BYTE 
0003+  0000             #define         DEFW .WORD
0004+  0000             #define         DEFM .TEXT
0005+  0000             #define         ORG  .ORG
0006+  0000             #define         EQU  .EQU
0004   0000             ;EQUs for ROM routines
0005   0000             #include "zx81rom.asm"
0001+  0000             ;ZX81 ROM routines 
0002+  0000             PRINT			EQU $10
0003+  0000             PRINTAT			EQU $08F5
0004+  0000             DISPROUT		EQU $0281
0005+  0000             ;D_FILE			EQU	$400C
0006+  0000             DISPLAY_3		EQU $0292 ;restore registers after a 'slow' display
0007+  0000             DISPLAY_5		EQU $02B5
0008+  0000             PLOT			EQU $0BB2 	; note ROM plot is 0baf - however first thing it does try to pull BC from the calculator stack
0009+  0000             							; so we'll skip past that and set BC ourselves
0010+  0000             CLS				EQU $0A2A
0011+  0000             KSCAN           EQU $02BB 
0012+  0000             FINDCHR         EQU $07BD
0013+  0000             COPY            EQU $0869
0014+  0000             FAST            EQU $0F23
0015+  0000             SLOW            EQU $0F2B
0016+  0000             SLOWORFAST		EQU $0207
0017+  0000             PAUSE			EQU $0F32
0018+  0000             SCROLL 			EQU $0C0E
0019+  0000             ;sys vars
0020+  0000             ERR_NR			EQU $40000006   0000             ;ZX81 char codes/how to survive without ASCII
0007   0000             #include "charcodes.asm"
0001+  0000             ; ZX81 Characters. 
0002+  0000             __:				EQU	$00	;spacja
0003+  0000             _QT:			EQU	$0B	;"
0004+  0000             _PD:			EQU	$0C	;funt 
0005+  0000             _SD:			EQU	$0D	;$
0006+  0000             _CL:			EQU	$0E	;:
0007+  0000             _QM:			EQU	$0F	;?
0008+  0000             _OP:			EQU	$10	;(
0009+  0000             _CP:			EQU	$11	;)
0010+  0000             _GT:			EQU	$12	;>
0011+  0000             _LT:			EQU	$13	;<
0012+  0000             _EQ:			EQU	$14	;=
0013+  0000             _PL:			EQU	$15	;+
0014+  0000             _MI:			EQU	$16	;-
0015+  0000             _AS:			EQU	$17	;*
0016+  0000             _SL:			EQU	$18	;/
0017+  0000             _SC:			EQU	$19	;;
0018+  0000             _CM:			EQU	$1A	;,
0019+  0000             _DT:			EQU	$1B	;.
0020+  0000             _NL:			EQU	$76	;NEWLINE
0021+  0000             
0022+  0000             _0				EQU $1C
0023+  0000             _1				EQU $1D
0024+  0000             _2				EQU $1E
0025+  0000             _3				EQU $1F
0026+  0000             _4				EQU $20
0027+  0000             _5				EQU $21
0028+  0000             _6				EQU $22
0029+  0000             _7				EQU $23
0030+  0000             _8				EQU $24
0031+  0000             _9				EQU $25
0032+  0000             _A				EQU $26
0033+  0000             _B				EQU $27
0034+  0000             _C				EQU $28
0035+  0000             _D				EQU $29
0036+  0000             _E				EQU $2A
0037+  0000             _F				EQU $2B
0038+  0000             _G				EQU $2C
0039+  0000             _H				EQU $2D
0040+  0000             _I				EQU $2E
0041+  0000             _J				EQU $2F
0042+  0000             _K				EQU $30
0043+  0000             _L				EQU $31
0044+  0000             _M				EQU $32
0045+  0000             _N				EQU $33
0046+  0000             _O				EQU $34
0047+  0000             _P				EQU $35
0048+  0000             _Q				EQU $36
0049+  0000             _R				EQU $37
0050+  0000             _S				EQU $38
0051+  0000             _T				EQU $39
0052+  0000             _U				EQU $3A
0053+  0000             _V				EQU $3B
0054+  0000             _W				EQU $3C
0055+  0000             _X				EQU $3D
0056+  0000             _Y				EQU $3E
0057+  0000             _Z				EQU $3F
0008   0000             ;system variables
0009   0000             #include "zx81sys.asm"
0001+  0000             ;system variables
0002+  0000             ;Origin of a ZX81 file is always 16393 
0003+  0000             
0004+  4009                             ORG 16393
0005+  4009                             
0006+  4009             ; System variables live here
0007+  4009 00          VERSN:          DEFB 0
0008+  400A 02 00       E_PPC:          DEFW 2
0009+  400C 44 41       D_FILE:         DEFW Display
0010+  400E 45 41       DF_CC:          DEFW Display+1                  ; First character of display
0011+  4010 5D 44       VARS:           DEFW Variables
0012+  4012 00 00       DEST:           DEFW 0
0013+  4014 5E 44       E_LINE:         DEFW BasicEnd 
0014+  4016 62 44       CH_ADD:         DEFW BasicEnd+4                 ; Simulate SAVE "X"
0015+  4018 00 00       X_PTR:          DEFW 0
0016+  401A 63 44       STKBOT:         DEFW BasicEnd+5
0017+  401C 63 44       STKEND:         DEFW BasicEnd+5                 ; Empty stack
0018+  401E 00          BREG:           DEFB 0
0019+  401F 5D 40       MEM:            DEFW MEMBOT
0020+  4021 00          UNUSED1:        DEFB 0
0021+  4022 02          DF_SZ:          DEFB 2
0022+  4023 02 00       S_TOP:          DEFW $0002                      ; Top program line number
0023+  4025 BF FD       LAST_K:         DEFW $fdbf
0024+  4027 0F          DEBOUN:         DEFB 15
0025+  4028 37          MARGIN:         DEFB 55
0026+  4029 32 41       NXTLIN:         DEFW Line2                      ; Next line address
0027+  402B 00 00       OLDPPC:         DEFW 0
0028+  402D 00          FLAGX:          DEFB 0
0029+  402E 00 00       STRLEN:         DEFW 0
0030+  4030 8D 0C       T_ADDR:         DEFW $0c8d
0031+  4032 00 00       SEED:           DEFW 0
0032+  4034 A3 F5       FRAMES:         DEFW $f5a3
0033+  4036 00 00       COORDS:         DEFW 0
0034+  4038 BC          PR_CC:          DEFB $bc
0035+  4039 21 18       S_POSN:         DEFW $1821
0036+  403B 40          CDFLAG:         DEFB $40
0037+  403C 00 00 00 00 PRBUFF:         DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,$76 ; 32 Spaces + Newline
0037+  4040 00 00 00 00 
0037+  4044 00 00 00 00 
0037+  4048 00 00 00 00 
0037+  404C 00 00 00 00 
0037+  4050 00 00 00 00 
0037+  4054 00 00 00 00 
0037+  4058 00 00 00 00 
0037+  405C 76 
0038+  405D 00 00 00 00 MEMBOT:         DEFB 0,0,0,0,0,0,0,0,0,0,$84,$20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ; 30 zeros
0038+  4061 00 00 00 00 
0038+  4065 00 00 84 20 
0038+  4069 00 00 00 00 
0038+  406D 00 00 00 00 
0038+  4071 00 00 00 00 
0038+  4075 00 00 00 00 
0038+  4079 00 00 
0039+  407B 00 00       UNUNSED2:       DEFW 0
0040+  407D             
0041+  407D             ; End of system variables
0042+  407D             
0010   407D             
0011   407D             ;the standard REM statement that will contain our 'hex' code
0012   407D             #include "line1.asm"
0001+  407D             ;Line 1 
0002+  407D             ;this is the REM statement...
0003+  407D 00 00       Line1:          DEFB $00,$00                    ; Line 1
0004+  407F B1 00                       DEFW Line1End-Line1Text         ; Line 1 length
0005+  4081 EA          Line1Text:      DEFB $ea                        ; REM             
0006+  4082             
0013   4082             
0014   4082             ; these variables need converting to screen addresses for zx81
0015   4082             ; problem with zx81 is the screen display D_FILE memory address changes with size of basic program 
0016   4082             ; see https://www.sinclairzxworld.com/viewtopic.php?t=3919
0017   4082             ; (the asm here is converted to one line of basic)
0018   4082             
0019   4082             #define ROAD_SCREEN_MEM_LOCATION 22537    
0020   4082             #define CAR_SCREEN_MEM_LOCATION 23278
0021   4082             #define ROADFROM_SCREEN_MEM_LOCATION 23263
0022   4082             #define ROADTO_SCREEN_MEM_LOCATION 23295
0023   4082             #define RANDOM_BYTES_MEM_LOCATION 14000
0024   4082             ;D_FILE is location of screen memory (which moves depending on length of basic, but should be fixed after program is loaded
0025   4082             #define D_FILE 16396
0026   4082             
0027   4082             ; keyboard caps to v
0028   4082             #define KEYBOARD_READ_MEMORY_LOCATION_CAPV 65278
0029   4082             ; keyboard space to b
0030   4082             #define KEYBOARD_READ_MEMORY_LOCATION_SPACEB 32766
0031   4082             
0032   4082 C3 8D 40    	jp main
0033   4085             var_car_pos  ; was 32900 in zx spec version
0034   4085 00 00       	DEFB 0,0
0035   4087             var_road_pos
0036   4087 00 00       	DEFB 0,0
0037   4089             var_scroll_road_from
0038   4089 00 00       	DEFB 0,0
0039   408B             var_scroll_road_to
0040   408B 00 00       	DEFB 0,0
0041   408D             
0042   408D             main
0043   408D             	
0044   408D F3          	di
0045   408E 21 09 58    	ld hl, ROAD_SCREEN_MEM_LOCATION ;initialise road
0046   4091 E5          	push hl  ;save road posn
0047   4092 AF          	xor a
0048   4093 06 18       	ld b,24
0049   4095             fillscreen
0050   4095 77          	ld (hl),a
0051   4096 23          	inc hl
0052   4097 77          	ld (hl),a
0053   4098 11 09 00    	ld de,9
0054   409B 19          	add hl,de
0055   409C 77          	ld (hl),a
0056   409D 23          	inc hl
0057   409E 77          	ld (hl),a
0058   409F 11 15 00    	ld de,21
0059   40A2 19          	add hl,de
0060   40A3 10 F0       	djnz fillscreen
0061   40A5 48          	ld c,b  ;initialise score
0062   40A6 C5          	push bc  ;save score
0063   40A7 21 EE 5A    	ld hl,CAR_SCREEN_MEM_LOCATION ;initialise car
0064   40AA 3E 08       	ld a,8
0065   40AC 77          	ld (hl),a
0066   40AD 22 85 40    	ld (var_car_pos),hl ;save car posn
0067   40B0             principalloop
0068   40B0 2A 85 40    	ld hl,(var_car_pos) ;retrieve car posn
0069   40B3 3E 38       	ld a,56  ;erase car
0070   40B5 77          	ld (hl),a
0071   40B6 FB          	ei
0072   40B7 01 FE FE    	ld bc,KEYBOARD_READ_MEMORY_LOCATION_CAPV ;read keyboard caps to v
0073   40BA ED 78       	in a,(c)
0074   40BC FE BF       	cp 191
0075   40BE 20 01       	jr nz, moveright
0076   40C0 2C          	inc l
0077   40C1             moveright
0078   40C1 01 FE 7F    	ld bc,KEYBOARD_READ_MEMORY_LOCATION_SPACEB ;read keyboard space to b
0079   40C4 ED 78       	in a,(c)
0080   40C6 FE BF       	cp 191
0081   40C8 20 01       	jr nz, dontmove
0082   40CA 2D          	dec l
0083   40CB             dontmove
0084   40CB F3          	di
0085   40CC 22 85 40    	ld (var_car_pos),hl ;store car posn
0086   40CF 11 20 00    	ld de, 32 ;new carposn
0087   40D2 AF          	xor a  ;set carry flag to 0
0088   40D3 ED 52       	sbc hl,de
0089   40D5 7E          	ld a,(hl) ;crash?
0090   40D6 B7          	or a
0091   40D7 28 54       	jr z,gameover
0092   40D9 3E 08       	ld a,8  ;print car
0093   40DB 77          	ld (hl),a
0094   40DC 21 DF 5A    	ld hl,ROADFROM_SCREEN_MEM_LOCATION ;scroll road
0095   40DF 11 FF 5A    	ld de,ROADTO_SCREEN_MEM_LOCATION 
0096   40E2 01 E0 02    	ld bc,736
0097   40E5 ED B8       	lddr
0098   40E7 C1          	pop bc  ;retrieve score
0099   40E8 E1          	pop hl  ;retrieve road posn
0100   40E9 E5          	push hl  ;save road posn
0101   40EA 3E 38       	ld a,56  ;delete old road
0102   40EC 77          	ld (hl),a
0103   40ED 23          	inc hl
0104   40EE 77          	ld (hl),a
0105   40EF 11 09 00    	ld de,9
0106   40F2 19          	add hl,de
0107   40F3 77          	ld (hl),a
0108   40F4 23          	inc hl
0109   40F5 77          	ld (hl),a
0110   40F6             	;random road left or right
0111   40F6 21 B0 36    	ld hl,RANDOM_BYTES_MEM_LOCATION ;source of random bytes in ROM
0112   40F9 16 00       	ld d,0
0113   40FB 59          	ld e,c
0114   40FC 19          	add hl, de
0115   40FD 7E          	ld a,(hl)
0116   40FE E1          	pop hl  ;retrieve road posn
0117   40FF 2B          	dec hl  ;move road posn 1 left
0118   4100 E6 01       	and 1
0119   4102 28 02       	jr z, roadleft
0120   4104 23          	inc hl
0121   4105 23          	inc hl
0122   4106             roadleft
0123   4106 7D          	ld a,l  ;check left
0124   4107 FE FF       	cp 255
0125   4109 20 02       	jr nz, checkright
0126   410B 23          	inc hl
0127   410C 23          	inc hl
0128   410D             checkright
0129   410D 7D          	ld a,l
0130   410E FE 15       	cp 21
0131   4110 20 02       	jr nz, newroadposn
0132   4112 2B          	dec hl
0133   4113 2B          	dec hl
0134   4114             newroadposn
0135   4114 E5          	push hl  ;save road posn
0136   4115 AF          	xor a  ;print new road
0137   4116 77          	ld (hl),a
0138   4117 23          	inc hl
0139   4118 77          	ld (hl),a
0140   4119 11 09 00    	ld de,9
0141   411C 19          	add hl,de
0142   411D 77          	ld (hl),a
0143   411E 23          	inc hl
0144   411F 77          	ld (hl),a
0145   4120 03          	inc bc  ;add 1 to score
0146   4121 C5          	push bc  ;save score
0147   4122             	;wait routine
0148   4122 01 FF 1F    	ld bc,$1fff ;max waiting time
0149   4125             wait
0150   4125 0B          	dec bc
0151   4126 78          	ld a,b
0152   4127 B1          	or c
0153   4128 20 FB       	jr nz, wait
0154   412A C3 B0 40    	jp principalloop
0155   412D             gameover
0156   412D C1          	pop bc  ;retrieve score
0157   412E E1          	pop hl  ;empty stack
0158   412F FB          	ei
0159   4130 C9          	ret     ; game and tutorial written by Jon Kingsman
0160   4131             	
0161   4131             ;include our variables
0162   4131             #include "vars.asm"
0001+  4131             ;our variables 
0002+  4131             
0163   4131             
0164   4131             ; ===========================================================
0165   4131             ; code ends
0166   4131             ; ===========================================================
0167   4131             ;end the REM line and put in the RAND USR line to call our 'hex code'
0168   4131             #include "line2.asm"
0001+  4131             ;this is the end of line 1 - the REM	 		
0002+  4131 76          				DEFB $76                        ; Newline				
0003+  4132             ;followed by the the RAND USR line				
0004+  4132             Line1End       
0005+  4132 00 0A       Line2			DEFB $00,$0a
0006+  4134 0E 00                       DEFW Line2End-Line2Text
0007+  4136 F9 D4       Line2Text     	DEFB $F9,$D4                    ; RAND USR
0008+  4138 1D 22 21 1D 				DEFB $1D,$22,$21,$1D,$20        ; 16514                
0008+  413C 20 
0009+  413D 7E                          DEFB $7E                        ; Number
0010+  413E 8F 01 04 00                 DEFB $8F,$01,$04,$00,$00        ; Numeric encoding
0010+  4142 00 
0011+  4143 76                          DEFB $76                        ; Newline
0012+  4144             Line2End 
0169   4144             
0170   4144             ;display file defintion
0171   4144             #include "screen.asm"               
0001+  4144             ;ZX81 screens
0002+  4144             ; Display file (ZX81 screen) - low res screen 
0003+  4144 76          Display        	DEFB $76     
0004+  4145 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 0
0004+  4149 00 00 00 00 
0004+  414D 00 00 00 00 
0004+  4151 00 00 00 00 
0004+  4155 00 00 00 00 
0004+  4159 00 00 00 00 
0004+  415D 00 00 00 00 
0004+  4161 00 00 00 00 
0004+  4165 76 
0005+  4166 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 1
0005+  416A 00 00 00 00 
0005+  416E 00 00 00 00 
0005+  4172 00 00 00 00 
0005+  4176 00 00 00 00 
0005+  417A 00 00 00 00 
0005+  417E 00 00 00 00 
0005+  4182 00 00 00 00 
0005+  4186 76 
0006+  4187 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 2
0006+  418B 00 00 00 00 
0006+  418F 00 00 00 00 
0006+  4193 00 00 00 00 
0006+  4197 00 00 00 00 
0006+  419B 00 00 00 00 
0006+  419F 00 00 00 00 
0006+  41A3 00 00 00 00 
0006+  41A7 76 
0007+  41A8 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 3
0007+  41AC 00 00 00 00 
0007+  41B0 00 00 00 00 
0007+  41B4 00 00 00 00 
0007+  41B8 00 00 00 00 
0007+  41BC 00 00 00 00 
0007+  41C0 00 00 00 00 
0007+  41C4 00 00 00 00 
0007+  41C8 76 
0008+  41C9 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 4
0008+  41CD 00 00 00 00 
0008+  41D1 00 00 00 00 
0008+  41D5 00 00 00 00 
0008+  41D9 00 00 00 00 
0008+  41DD 00 00 00 00 
0008+  41E1 00 00 00 00 
0008+  41E5 00 00 00 00 
0008+  41E9 76 
0009+  41EA 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 5
0009+  41EE 00 00 00 00 
0009+  41F2 00 00 00 00 
0009+  41F6 00 00 00 00 
0009+  41FA 00 00 00 00 
0009+  41FE 00 00 00 00 
0009+  4202 00 00 00 00 
0009+  4206 00 00 00 00 
0009+  420A 76 
0010+  420B 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 6
0010+  420F 00 00 00 00 
0010+  4213 00 00 00 00 
0010+  4217 00 00 00 00 
0010+  421B 00 00 00 00 
0010+  421F 00 00 00 00 
0010+  4223 00 00 00 00 
0010+  4227 00 00 00 00 
0010+  422B 76 
0011+  422C 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 7
0011+  4230 00 00 00 00 
0011+  4234 00 00 00 00 
0011+  4238 00 00 00 00 
0011+  423C 00 00 00 00 
0011+  4240 00 00 00 00 
0011+  4244 00 00 00 00 
0011+  4248 00 00 00 00 
0011+  424C 76 
0012+  424D 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 8
0012+  4251 00 00 00 00 
0012+  4255 00 00 00 00 
0012+  4259 00 00 00 00 
0012+  425D 00 00 00 00 
0012+  4261 00 00 00 00 
0012+  4265 00 00 00 00 
0012+  4269 00 00 00 00 
0012+  426D 76 
0013+  426E 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 9
0013+  4272 00 00 00 00 
0013+  4276 00 00 00 00 
0013+  427A 00 00 00 00 
0013+  427E 00 00 00 00 
0013+  4282 00 00 00 00 
0013+  4286 00 00 00 00 
0013+  428A 00 00 00 00 
0013+  428E 76 
0014+  428F 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 10
0014+  4293 00 00 00 00 
0014+  4297 00 00 00 00 
0014+  429B 00 00 00 00 
0014+  429F 00 00 00 00 
0014+  42A3 00 00 00 00 
0014+  42A7 00 00 00 00 
0014+  42AB 00 00 00 00 
0014+  42AF 76 
0015+  42B0 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 11
0015+  42B4 00 00 00 00 
0015+  42B8 00 00 00 00 
0015+  42BC 00 00 00 00 
0015+  42C0 00 00 00 00 
0015+  42C4 00 00 00 00 
0015+  42C8 00 00 00 00 
0015+  42CC 00 00 00 00 
0015+  42D0 76 
0016+  42D1 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 12
0016+  42D5 00 00 00 00 
0016+  42D9 00 00 00 00 
0016+  42DD 00 00 00 00 
0016+  42E1 00 00 00 00 
0016+  42E5 00 00 00 00 
0016+  42E9 00 00 00 00 
0016+  42ED 00 00 00 00 
0016+  42F1 76 
0017+  42F2 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 13
0017+  42F6 00 00 00 00 
0017+  42FA 00 00 00 00 
0017+  42FE 00 00 00 00 
0017+  4302 00 00 00 00 
0017+  4306 00 00 00 00 
0017+  430A 00 00 00 00 
0017+  430E 00 00 00 00 
0017+  4312 76 
0018+  4313 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 14
0018+  4317 00 00 00 00 
0018+  431B 00 00 00 00 
0018+  431F 00 00 00 00 
0018+  4323 00 00 00 00 
0018+  4327 00 00 00 00 
0018+  432B 00 00 00 00 
0018+  432F 00 00 00 00 
0018+  4333 76 
0019+  4334 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 15
0019+  4338 00 00 00 00 
0019+  433C 00 00 00 00 
0019+  4340 00 00 00 00 
0019+  4344 00 00 00 00 
0019+  4348 00 00 00 00 
0019+  434C 00 00 00 00 
0019+  4350 00 00 00 00 
0019+  4354 76 
0020+  4355 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 16
0020+  4359 00 00 00 00 
0020+  435D 00 00 00 00 
0020+  4361 00 00 00 00 
0020+  4365 00 00 00 00 
0020+  4369 00 00 00 00 
0020+  436D 00 00 00 00 
0020+  4371 00 00 00 00 
0020+  4375 76 
0021+  4376 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 17
0021+  437A 00 00 00 00 
0021+  437E 00 00 00 00 
0021+  4382 00 00 00 00 
0021+  4386 00 00 00 00 
0021+  438A 00 00 00 00 
0021+  438E 00 00 00 00 
0021+  4392 00 00 00 00 
0021+  4396 76 
0022+  4397 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 18
0022+  439B 00 00 00 00 
0022+  439F 00 00 00 00 
0022+  43A3 00 00 00 00 
0022+  43A7 00 00 00 00 
0022+  43AB 00 00 00 00 
0022+  43AF 00 00 00 00 
0022+  43B3 00 00 00 00 
0022+  43B7 76 
0023+  43B8 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 19
0023+  43BC 00 00 00 00 
0023+  43C0 00 00 00 00 
0023+  43C4 00 00 00 00 
0023+  43C8 00 00 00 00 
0023+  43CC 00 00 00 00 
0023+  43D0 00 00 00 00 
0023+  43D4 00 00 00 00 
0023+  43D8 76 
0024+  43D9 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 20
0024+  43DD 00 00 00 00 
0024+  43E1 00 00 00 00 
0024+  43E5 00 00 00 00 
0024+  43E9 00 00 00 00 
0024+  43ED 00 00 00 00 
0024+  43F1 00 00 00 00 
0024+  43F5 00 00 00 00 
0024+  43F9 76 
0025+  43FA 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 21
0025+  43FE 00 00 00 00 
0025+  4402 00 00 00 00 
0025+  4406 00 00 00 00 
0025+  440A 00 00 00 00 
0025+  440E 00 00 00 00 
0025+  4412 00 00 00 00 
0025+  4416 00 00 00 00 
0025+  441A 76 
0026+  441B 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 22
0026+  441F 00 00 00 00 
0026+  4423 00 00 00 00 
0026+  4427 00 00 00 00 
0026+  442B 00 00 00 00 
0026+  442F 00 00 00 00 
0026+  4433 00 00 00 00 
0026+  4437 00 00 00 00 
0026+  443B 76 
0027+  443C 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 23
0027+  4440 00 00 00 00 
0027+  4444 00 00 00 00 
0027+  4448 00 00 00 00 
0027+  444C 00 00 00 00 
0027+  4450 00 00 00 00 
0027+  4454 00 00 00 00 
0027+  4458 00 00 00 00 
0027+  445C 76 
0028+  445D             
0172   445D             
0173   445D             ;close out the basic program
0174   445D             #include "endbasic.asm"
0001+  445D             ; close out the BASIC program structure
0002+  445D             ; BASIC Variables area 
0003+  445D             Variables:      
0004+  445D 80          VariablesEnd:   DEFB $80
0005+  445E             BasicEnd:                              
0006+  445E             
0007+  445E             
0008+  445E             #END
tasm: Number of errors = 0
