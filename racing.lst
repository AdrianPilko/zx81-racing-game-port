0001   0000             ;;;;;;;;;;;;;;;;;;;;;
0002   0000             ;;; port of a racing game from zx spectrum code by Jon Kingsman by Adrian Pilkington
0003   0000             ;;;;;;;;;;;;;;;;;;;;;
0004   0000             
0005   0000             #include "zx81defs.asm" ;; https://www.sinclairzxworld.com/viewtopic.php?t=2186&start=40
0001+  0000             ;defines to make us feel more at home
0002+  0000             #define         DEFB .BYTE 
0003+  0000             #define         DEFW .WORD
0004+  0000             #define         DEFM .TEXT
0005+  0000             #define         ORG  .ORG
0006+  0000             #define         EQU  .EQU
0006   0000             ;EQUs for ROM routines
0007   0000             #include "zx81rom.asm"
0001+  0000             ;ZX81 ROM routines 
0002+  0000             PRINT			EQU $10
0003+  0000             PRINTAT			EQU $08F5
0004+  0000             DISPROUT		EQU $0281
0005+  0000             ;D_FILE			EQU	$400C
0006+  0000             DISPLAY_3		EQU $0292 ;restore registers after a 'slow' display
0007+  0000             DISPLAY_5		EQU $02B5
0008+  0000             PLOT			EQU $0BB2 	; note ROM plot is 0baf - however first thing it does try to pull BC from the calculator stack
0009+  0000             							; so we'll skip past that and set BC ourselves
0010+  0000             CLS				EQU $0A2A
0011+  0000             KSCAN           EQU $02BB 
0012+  0000             FINDCHR         EQU $07BD
0013+  0000             COPY            EQU $0869
0014+  0000             FAST            EQU $0F23
0015+  0000             SLOW            EQU $0F2B
0016+  0000             SLOWORFAST		EQU $0207
0017+  0000             PAUSE			EQU $0F32
0018+  0000             SCROLL 			EQU $0C0E
0019+  0000             ;sys vars
0020+  0000             ERR_NR			EQU $40000008   0000             ;ZX81 char codes/how to survive without ASCII
0009   0000             #include "charcodes.asm"
0001+  0000             ; ZX81 Characters. 
0002+  0000             __:				EQU	$00	;spacja
0003+  0000             _QT:			EQU	$0B	;"
0004+  0000             _PD:			EQU	$0C	;funt 
0005+  0000             _SD:			EQU	$0D	;$
0006+  0000             _CL:			EQU	$0E	;:
0007+  0000             _QM:			EQU	$0F	;?
0008+  0000             _OP:			EQU	$10	;(
0009+  0000             _CP:			EQU	$11	;)
0010+  0000             _GT:			EQU	$12	;>
0011+  0000             _LT:			EQU	$13	;<
0012+  0000             _EQ:			EQU	$14	;=
0013+  0000             _PL:			EQU	$15	;+
0014+  0000             _MI:			EQU	$16	;-
0015+  0000             _AS:			EQU	$17	;*
0016+  0000             _SL:			EQU	$18	;/
0017+  0000             _SC:			EQU	$19	;;
0018+  0000             _CM:			EQU	$1A	;,
0019+  0000             _DT:			EQU	$1B	;.
0020+  0000             _NL:			EQU	$76	;NEWLINE
0021+  0000             
0022+  0000             _0				EQU $1C
0023+  0000             _1				EQU $1D
0024+  0000             _2				EQU $1E
0025+  0000             _3				EQU $1F
0026+  0000             _4				EQU $20
0027+  0000             _5				EQU $21
0028+  0000             _6				EQU $22
0029+  0000             _7				EQU $23
0030+  0000             _8				EQU $24
0031+  0000             _9				EQU $25
0032+  0000             _A				EQU $26
0033+  0000             _B				EQU $27
0034+  0000             _C				EQU $28
0035+  0000             _D				EQU $29
0036+  0000             _E				EQU $2A
0037+  0000             _F				EQU $2B
0038+  0000             _G				EQU $2C
0039+  0000             _H				EQU $2D
0040+  0000             _I				EQU $2E
0041+  0000             _J				EQU $2F
0042+  0000             _K				EQU $30
0043+  0000             _L				EQU $31
0044+  0000             _M				EQU $32
0045+  0000             _N				EQU $33
0046+  0000             _O				EQU $34
0047+  0000             _P				EQU $35
0048+  0000             _Q				EQU $36
0049+  0000             _R				EQU $37
0050+  0000             _S				EQU $38
0051+  0000             _T				EQU $39
0052+  0000             _U				EQU $3A
0053+  0000             _V				EQU $3B
0054+  0000             _W				EQU $3C
0055+  0000             _X				EQU $3D
0056+  0000             _Y				EQU $3E
0057+  0000             _Z				EQU $3F
0010   0000             ;system variables
0011   0000             #include "zx81sys.asm"
0001+  0000             ;system variables
0002+  0000             ;Origin of a ZX81 file is always 16393 
0003+  0000             
0004+  4009                             ORG 16393
0005+  4009                             
0006+  4009             ; System variables live here
0007+  4009 00          VERSN:          DEFB 0
0008+  400A 02 00       E_PPC:          DEFW 2
0009+  400C 78 41       D_FILE:         DEFW Display
0010+  400E 79 41       DF_CC:          DEFW Display+1                  ; First character of display
0011+  4010 91 44       VARS:           DEFW Variables
0012+  4012 00 00       DEST:           DEFW 0
0013+  4014 92 44       E_LINE:         DEFW BasicEnd 
0014+  4016 96 44       CH_ADD:         DEFW BasicEnd+4                 ; Simulate SAVE "X"
0015+  4018 00 00       X_PTR:          DEFW 0
0016+  401A 97 44       STKBOT:         DEFW BasicEnd+5
0017+  401C 97 44       STKEND:         DEFW BasicEnd+5                 ; Empty stack
0018+  401E 00          BREG:           DEFB 0
0019+  401F 5D 40       MEM:            DEFW MEMBOT
0020+  4021 00          UNUSED1:        DEFB 0
0021+  4022 02          DF_SZ:          DEFB 2
0022+  4023 02 00       S_TOP:          DEFW $0002                      ; Top program line number
0023+  4025 BF FD       LAST_K:         DEFW $fdbf
0024+  4027 0F          DEBOUN:         DEFB 15
0025+  4028 37          MARGIN:         DEFB 55
0026+  4029 66 41       NXTLIN:         DEFW Line2                      ; Next line address
0027+  402B 00 00       OLDPPC:         DEFW 0
0028+  402D 00          FLAGX:          DEFB 0
0029+  402E 00 00       STRLEN:         DEFW 0
0030+  4030 8D 0C       T_ADDR:         DEFW $0c8d
0031+  4032 00 00       SEED:           DEFW 0
0032+  4034 A3 F5       FRAMES:         DEFW $f5a3
0033+  4036 00 00       COORDS:         DEFW 0
0034+  4038 BC          PR_CC:          DEFB $bc
0035+  4039 21 18       S_POSN:         DEFW $1821
0036+  403B 40          CDFLAG:         DEFB $40
0037+  403C 00 00 00 00 PRBUFF:         DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,$76 ; 32 Spaces + Newline
0037+  4040 00 00 00 00 
0037+  4044 00 00 00 00 
0037+  4048 00 00 00 00 
0037+  404C 00 00 00 00 
0037+  4050 00 00 00 00 
0037+  4054 00 00 00 00 
0037+  4058 00 00 00 00 
0037+  405C 76 
0038+  405D 00 00 00 00 MEMBOT:         DEFB 0,0,0,0,0,0,0,0,0,0,$84,$20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ; 30 zeros
0038+  4061 00 00 00 00 
0038+  4065 00 00 84 20 
0038+  4069 00 00 00 00 
0038+  406D 00 00 00 00 
0038+  4071 00 00 00 00 
0038+  4075 00 00 00 00 
0038+  4079 00 00 
0039+  407B 00 00       UNUNSED2:       DEFW 0
0040+  407D             
0041+  407D             ; End of system variables
0042+  407D             
0012   407D             
0013   407D             ;the standard REM statement that will contain our 'hex' code
0014   407D             #include "line1.asm"
0001+  407D             ;Line 1 
0002+  407D             ;this is the REM statement...
0003+  407D 00 00       Line1:          DEFB $00,$00                    ; Line 1
0004+  407F E5 00                       DEFW Line1End-Line1Text         ; Line 1 length
0005+  4081 EA          Line1Text:      DEFB $ea                        ; REM             
0006+  4082             
0015   4082             
0016   4082             ; these variables need converting to screen addresses for zx81
0017   4082             ; problem with zx81 is the screen display D_FILE memory address changes with size of basic program 
0018   4082             ; see https://www.sinclairzxworld.com/viewtopic.php?t=3919
0019   4082             ; (the asm here is converted to one line of basic)
0020   4082             #define ROWS_IN_SCREEN 22
0021   4082             #define COL_IN_SCREEN 32
0022   4082             #define ROAD_SCREEN_MEM_OFFSET 9    
0023   4082             #define WIDTH_OF_ROAD 9
0024   4082             #define CAR_SCREEN_MEM_START_OFFSET 776
0025   4082             #define ROADFROM_SCREEN_MEM_LOCATION 23263
0026   4082             #define ROADTO_SCREEN_MEM_LOCATION 23295
0027   4082             #define RANDOM_BYTES_MEM_LOCATION 14000
0028   4082             
0029   4082             ;D_FILE is location of screen memory (which moves depending on length of basic, but should be fixed after program is loaded
0030   4082             ; probably should run some code to detect if this is 1K or 16K as well, or just have 2 verisons 1K and 16K
0031   4082             #define D_FILE 16396
0032   4082             ;black block
0033   4082             #define CAR_CHARACTER_CODE 128  
0034   4082             ;black grey block
0035   4082             #define ROAD_CHARACTER_CODE 136
0036   4082             
0037   4082             #define GREY_SQAURE 8  
0038   4082             
0039   4082             ; keyboard caps to v
0040   4082             #define KEYBOARD_READ_MEMORY_LOCATION_CAPV 65278
0041   4082             ; keyboard space to b
0042   4082             #define KEYBOARD_READ_MEMORY_LOCATION_SPACEB 32766
0043   4082             
0044   4082 C3 8D 40    	jp main
0045   4085             
0046   4085             var_car_pos  ; was 32900 in zx spec version
0047   4085 00 00       	DEFB 0,0
0048   4087             var_road_pos
0049   4087 00 00       	DEFB 0,0
0050   4089             var_scroll_road_from
0051   4089 00 00       	DEFB 0,0
0052   408B             var_scroll_road_to
0053   408B 00 00       	DEFB 0,0
0054   408D             
0055   408D             main
0056   408D CD 2A 0A    	call CLS	
0057   4090 F3          	di
0058   4091             	
0059   4091 2A 0C 40    	ld hl,(D_FILE) ;initialise road start memory address
0060   4094 11 09 00    	ld de, ROAD_SCREEN_MEM_OFFSET
0061   4097 19          	add hl, de	
0062   4098 E5          	push hl  ;save road posn
0063   4099 AF          	xor a  ;???? possibly clears cpu flags?
0064   409A 3E 88       	ld a, ROAD_CHARACTER_CODE
0065   409C 06 16       	ld b,ROWS_IN_SCREEN
0066   409E             	
0067   409E             initialiseRoad  ;; was fillscreen in zx spectrum version, initialiseRoad is beter name of what it's doing!!
0068   409E 77          	ld (hl),a    ;; road starts as two staight vertical lines 
0069   409F 23          	inc hl   	 ;; make each edge of road 2 characters wide
0070   40A0 77          	ld (hl),a   
0071   40A1 11 09 00    	ld de,WIDTH_OF_ROAD   
0072   40A4 19          	add hl,de			  ;; add offset to get to other side of road
0073   40A5 77          	ld (hl),a				;; make each edge of road 2 characters wide
0074   40A6 23          	inc hl					
0075   40A7 77          	ld (hl),a
0076   40A8 11 16 00    	ld de,22 
0077   40AB 19          	add hl,de
0078   40AC 10 F0       	djnz initialiseRoad
0079   40AE             
0080   40AE 06 16       	ld b,ROWS_IN_SCREEN
0081   40B0 48          	ld c,b  ;initialise score
0082   40B1 C5          	push bc  ;save score
0083   40B2             	
0084   40B2 2A 0C 40    	ld hl,(D_FILE) ;initialise car
0085   40B5 11 08 03    	ld de, CAR_SCREEN_MEM_START_OFFSET
0086   40B8 19          	add hl, de
0087   40B9 3E 80       	ld a,CAR_CHARACTER_CODE 
0088   40BB 77          	ld (hl),a
0089   40BC 22 85 40    	ld (var_car_pos),hl ;save car posn
0090   40BF             
0091   40BF C3 3F 41    	jp gameover; return early for debug
0092   40C2             	
0093   40C2             principalloop
0094   40C2 2A 85 40    	ld hl,(var_car_pos) ;retrieve car posn
0095   40C5 3E 08       	ld a,GREY_SQAURE  ;erase car
0096   40C7 77          	ld (hl),a
0097   40C8 FB          	ei
0098   40C9 01 FE FE    	ld bc,KEYBOARD_READ_MEMORY_LOCATION_CAPV ;read keyboard caps to v
0099   40CC ED 78       	in a,(c)
0100   40CE FE BF       	cp 191
0101   40D0 20 01       	jr nz, moveright
0102   40D2 2C          	inc l
0103   40D3             moveright
0104   40D3 01 FE 7F    	ld bc,KEYBOARD_READ_MEMORY_LOCATION_SPACEB ;read keyboard space to b
0105   40D6 ED 78       	in a,(c)
0106   40D8 FE BF       	cp 191
0107   40DA 20 01       	jr nz, dontmove
0108   40DC 2D          	dec l
0109   40DD             dontmove
0110   40DD F3          	di
0111   40DE 22 85 40    	ld (var_car_pos),hl ;store car posn
0112   40E1 11 20 00    	ld de, 32 ;new carposn
0113   40E4 AF          	xor a  ;set carry flag to 0
0114   40E5 ED 52       	sbc hl,de
0115   40E7 7E          	ld a,(hl) ;crash?
0116   40E8 B7          	or a
0117   40E9 28 54       	jr z,gameover
0118   40EB 3E 80       	ld a,CAR_CHARACTER_CODE  ;print car
0119   40ED 77          	ld (hl),a
0120   40EE 21 DF 5A    	ld hl,ROADFROM_SCREEN_MEM_LOCATION ;scroll road
0121   40F1 11 FF 5A    	ld de,ROADTO_SCREEN_MEM_LOCATION 
0122   40F4 01 E0 02    	ld bc,736
0123   40F7 ED B8       	lddr
0124   40F9 C1          	pop bc  ;retrieve score
0125   40FA E1          	pop hl  ;retrieve road posn
0126   40FB E5          	push hl  ;save road posn
0127   40FC 3E 38       	ld a,56  ;delete old road
0128   40FE 77          	ld (hl),a
0129   40FF 23          	inc hl
0130   4100 77          	ld (hl),a
0131   4101 11 09 00    	ld de,9
0132   4104 19          	add hl,de
0133   4105 77          	ld (hl),a
0134   4106 23          	inc hl
0135   4107 77          	ld (hl),a
0136   4108             	;random road left or right
0137   4108 21 B0 36    	ld hl,RANDOM_BYTES_MEM_LOCATION ;source of random bytes in ROM
0138   410B 16 00       	ld d,0
0139   410D 59          	ld e,c
0140   410E 19          	add hl, de
0141   410F 7E          	ld a,(hl)
0142   4110 E1          	pop hl  ;retrieve road posn
0143   4111 2B          	dec hl  ;move road posn 1 left
0144   4112 E6 01       	and 1
0145   4114 28 02       	jr z, roadleft
0146   4116 23          	inc hl
0147   4117 23          	inc hl
0148   4118             roadleft
0149   4118 7D          	ld a,l  ;check left
0150   4119 FE FF       	cp 255
0151   411B 20 02       	jr nz, checkright
0152   411D 23          	inc hl
0153   411E 23          	inc hl
0154   411F             checkright
0155   411F 7D          	ld a,l
0156   4120 FE 15       	cp 21
0157   4122 20 02       	jr nz, newroadposn
0158   4124 2B          	dec hl
0159   4125 2B          	dec hl
0160   4126             newroadposn
0161   4126 E5          	push hl  ;save road posn
0162   4127 AF          	xor a  ;print new road
0163   4128 77          	ld (hl),a
0164   4129 23          	inc hl
0165   412A 77          	ld (hl),a
0166   412B 11 09 00    	ld de,9
0167   412E 19          	add hl,de
0168   412F 77          	ld (hl),a
0169   4130 23          	inc hl
0170   4131 77          	ld (hl),a
0171   4132 03          	inc bc  ;add 1 to score
0172   4133 C5          	push bc  ;save score
0173   4134             	;wait routine
0174   4134 01 FF 1F    	ld bc,$1fff ;max waiting time
0175   4137             wait
0176   4137 0B          	dec bc
0177   4138 78          	ld a,b
0178   4139 B1          	or c
0179   413A 20 FB       	jr nz, wait
0180   413C C3 C2 40    	jp principalloop
0181   413F             gameover
0182   413F C1          	pop bc  ;retrieve score
0183   4140 E1          	pop hl  ;empty stack
0184   4141 FB          	ei
0185   4142 C9          	ret     ; game and tutorial written by Jon Kingsman
0186   4143             
0187   4143             fill_screen_with_char    ; adapted from http://swensont.epizy.com/ZX81Assembly.pdf screen1
0188   4143 2A 0C 40    	ld hl,(D_FILE) ; Get start of display
0189   4146 0E 16       	ld c,22 ; line counter (22 lines)
0190   4148             loop1
0191   4148 23          	inc hl ; get past EOL
0192   4149 06 20       	ld b,32 ; character counter (32 rows)
0193   414B             loop2 
0194   414B 36 08       	ld (HL),GREY_SQAURE ; print grey square character
0195   414D 23          	inc hl ; move to next print position
0196   414E 10 FB       	djnz loop2 ; Do it again until B=0
0197   4150 0D          	dec c ; next line
0198   4151 20 F5       	jr nz,loop1
0199   4153 C9          	ret 
0200   4154             
0201   4154             print_to_screen_at    ; adapted from http://swensont.epizy.com/ZX81Assembly.pdf screen1
0202   4154 2A 0C 40    	ld hl,(D_FILE) ; Get start of display
0203   4157 0E 16       	ld c,22 ; line counter (22 lines)
0204   4159             Ploop1
0205   4159 23          	inc hl ; get past EOL
0206   415A 06 20       	ld b,32 ; character counter (32 rows)
0207   415C             Ploop2 
0208   415C 36 08       	ld (HL),$08 ; print grey square character
0209   415E 23          	inc hl ; move to next print position
0210   415F 10 FB       	djnz Ploop2 ; Do it again until B=0
0211   4161 0D          	dec c ; next line
0212   4162 20 F5       	jr nz,Ploop1
0213   4164 C9          	ret 	
0214   4165             	
0215   4165             ;include our variables
0216   4165             #include "vars.asm"
0001+  4165             ;our variables 
0002+  4165             
0217   4165             
0218   4165             ; ===========================================================
0219   4165             ; code ends
0220   4165             ; ===========================================================
0221   4165             ;end the REM line and put in the RAND USR line to call our 'hex code'
0222   4165             #include "line2.asm"
0001+  4165             ;this is the end of line 1 - the REM	 		
0002+  4165 76          				DEFB $76                        ; Newline				
0003+  4166             ;followed by the the RAND USR line				
0004+  4166             Line1End       
0005+  4166 00 0A       Line2			DEFB $00,$0a
0006+  4168 0E 00                       DEFW Line2End-Line2Text
0007+  416A F9 D4       Line2Text     	DEFB $F9,$D4                    ; RAND USR
0008+  416C 1D 22 21 1D 				DEFB $1D,$22,$21,$1D,$20        ; 16514                
0008+  4170 20 
0009+  4171 7E                          DEFB $7E                        ; Number
0010+  4172 8F 01 04 00                 DEFB $8F,$01,$04,$00,$00        ; Numeric encoding
0010+  4176 00 
0011+  4177 76                          DEFB $76                        ; Newline
0012+  4178             Line2End 
0223   4178             
0224   4178             ;display file defintion
0225   4178             #include "screen.asm"               
0001+  4178             ;ZX81 screens
0002+  4178             ; Display file (ZX81 screen) - low res screen 
0003+  4178 76          Display        	DEFB $76     
0004+  4179 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 0
0004+  417D 00 00 00 00 
0004+  4181 00 00 00 00 
0004+  4185 00 00 00 00 
0004+  4189 00 00 00 00 
0004+  418D 00 00 00 00 
0004+  4191 00 00 00 00 
0004+  4195 00 00 00 00 
0004+  4199 76 
0005+  419A 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 1
0005+  419E 00 00 00 00 
0005+  41A2 00 00 00 00 
0005+  41A6 00 00 00 00 
0005+  41AA 00 00 00 00 
0005+  41AE 00 00 00 00 
0005+  41B2 00 00 00 00 
0005+  41B6 00 00 00 00 
0005+  41BA 76 
0006+  41BB 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 2
0006+  41BF 00 00 00 00 
0006+  41C3 00 00 00 00 
0006+  41C7 00 00 00 00 
0006+  41CB 00 00 00 00 
0006+  41CF 00 00 00 00 
0006+  41D3 00 00 00 00 
0006+  41D7 00 00 00 00 
0006+  41DB 76 
0007+  41DC 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 3
0007+  41E0 00 00 00 00 
0007+  41E4 00 00 00 00 
0007+  41E8 00 00 00 00 
0007+  41EC 00 00 00 00 
0007+  41F0 00 00 00 00 
0007+  41F4 00 00 00 00 
0007+  41F8 00 00 00 00 
0007+  41FC 76 
0008+  41FD 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 4
0008+  4201 00 00 00 00 
0008+  4205 00 00 00 00 
0008+  4209 00 00 00 00 
0008+  420D 00 00 00 00 
0008+  4211 00 00 00 00 
0008+  4215 00 00 00 00 
0008+  4219 00 00 00 00 
0008+  421D 76 
0009+  421E 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 5
0009+  4222 00 00 00 00 
0009+  4226 00 00 00 00 
0009+  422A 00 00 00 00 
0009+  422E 00 00 00 00 
0009+  4232 00 00 00 00 
0009+  4236 00 00 00 00 
0009+  423A 00 00 00 00 
0009+  423E 76 
0010+  423F 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 6
0010+  4243 00 00 00 00 
0010+  4247 00 00 00 00 
0010+  424B 00 00 00 00 
0010+  424F 00 00 00 00 
0010+  4253 00 00 00 00 
0010+  4257 00 00 00 00 
0010+  425B 00 00 00 00 
0010+  425F 76 
0011+  4260 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 7
0011+  4264 00 00 00 00 
0011+  4268 00 00 00 00 
0011+  426C 00 00 00 00 
0011+  4270 00 00 00 00 
0011+  4274 00 00 00 00 
0011+  4278 00 00 00 00 
0011+  427C 00 00 00 00 
0011+  4280 76 
0012+  4281 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 8
0012+  4285 00 00 00 00 
0012+  4289 00 00 00 00 
0012+  428D 00 00 00 00 
0012+  4291 00 00 00 00 
0012+  4295 00 00 00 00 
0012+  4299 00 00 00 00 
0012+  429D 00 00 00 00 
0012+  42A1 76 
0013+  42A2 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 9
0013+  42A6 00 00 00 00 
0013+  42AA 00 00 00 00 
0013+  42AE 00 00 00 00 
0013+  42B2 00 00 00 00 
0013+  42B6 00 00 00 00 
0013+  42BA 00 00 00 00 
0013+  42BE 00 00 00 00 
0013+  42C2 76 
0014+  42C3 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 10
0014+  42C7 00 00 00 00 
0014+  42CB 00 00 00 00 
0014+  42CF 00 00 00 00 
0014+  42D3 00 00 00 00 
0014+  42D7 00 00 00 00 
0014+  42DB 00 00 00 00 
0014+  42DF 00 00 00 00 
0014+  42E3 76 
0015+  42E4 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 11
0015+  42E8 00 00 00 00 
0015+  42EC 00 00 00 00 
0015+  42F0 00 00 00 00 
0015+  42F4 00 00 00 00 
0015+  42F8 00 00 00 00 
0015+  42FC 00 00 00 00 
0015+  4300 00 00 00 00 
0015+  4304 76 
0016+  4305 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 12
0016+  4309 00 00 00 00 
0016+  430D 00 00 00 00 
0016+  4311 00 00 00 00 
0016+  4315 00 00 00 00 
0016+  4319 00 00 00 00 
0016+  431D 00 00 00 00 
0016+  4321 00 00 00 00 
0016+  4325 76 
0017+  4326 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 13
0017+  432A 00 00 00 00 
0017+  432E 00 00 00 00 
0017+  4332 00 00 00 00 
0017+  4336 00 00 00 00 
0017+  433A 00 00 00 00 
0017+  433E 00 00 00 00 
0017+  4342 00 00 00 00 
0017+  4346 76 
0018+  4347 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 14
0018+  434B 00 00 00 00 
0018+  434F 00 00 00 00 
0018+  4353 00 00 00 00 
0018+  4357 00 00 00 00 
0018+  435B 00 00 00 00 
0018+  435F 00 00 00 00 
0018+  4363 00 00 00 00 
0018+  4367 76 
0019+  4368 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 15
0019+  436C 00 00 00 00 
0019+  4370 00 00 00 00 
0019+  4374 00 00 00 00 
0019+  4378 00 00 00 00 
0019+  437C 00 00 00 00 
0019+  4380 00 00 00 00 
0019+  4384 00 00 00 00 
0019+  4388 76 
0020+  4389 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 16
0020+  438D 00 00 00 00 
0020+  4391 00 00 00 00 
0020+  4395 00 00 00 00 
0020+  4399 00 00 00 00 
0020+  439D 00 00 00 00 
0020+  43A1 00 00 00 00 
0020+  43A5 00 00 00 00 
0020+  43A9 76 
0021+  43AA 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 17
0021+  43AE 00 00 00 00 
0021+  43B2 00 00 00 00 
0021+  43B6 00 00 00 00 
0021+  43BA 00 00 00 00 
0021+  43BE 00 00 00 00 
0021+  43C2 00 00 00 00 
0021+  43C6 00 00 00 00 
0021+  43CA 76 
0022+  43CB 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 18
0022+  43CF 00 00 00 00 
0022+  43D3 00 00 00 00 
0022+  43D7 00 00 00 00 
0022+  43DB 00 00 00 00 
0022+  43DF 00 00 00 00 
0022+  43E3 00 00 00 00 
0022+  43E7 00 00 00 00 
0022+  43EB 76 
0023+  43EC 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 19
0023+  43F0 00 00 00 00 
0023+  43F4 00 00 00 00 
0023+  43F8 00 00 00 00 
0023+  43FC 00 00 00 00 
0023+  4400 00 00 00 00 
0023+  4404 00 00 00 00 
0023+  4408 00 00 00 00 
0023+  440C 76 
0024+  440D 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 20
0024+  4411 00 00 00 00 
0024+  4415 00 00 00 00 
0024+  4419 00 00 00 00 
0024+  441D 00 00 00 00 
0024+  4421 00 00 00 00 
0024+  4425 00 00 00 00 
0024+  4429 00 00 00 00 
0024+  442D 76 
0025+  442E 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 21
0025+  4432 00 00 00 00 
0025+  4436 00 00 00 00 
0025+  443A 00 00 00 00 
0025+  443E 00 00 00 00 
0025+  4442 00 00 00 00 
0025+  4446 00 00 00 00 
0025+  444A 00 00 00 00 
0025+  444E 76 
0026+  444F 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 22
0026+  4453 00 00 00 00 
0026+  4457 00 00 00 00 
0026+  445B 00 00 00 00 
0026+  445F 00 00 00 00 
0026+  4463 00 00 00 00 
0026+  4467 00 00 00 00 
0026+  446B 00 00 00 00 
0026+  446F 76 
0027+  4470 00 00 00 00                 DEFB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$76 ; Line 23
0027+  4474 00 00 00 00 
0027+  4478 00 00 00 00 
0027+  447C 00 00 00 00 
0027+  4480 00 00 00 00 
0027+  4484 00 00 00 00 
0027+  4488 00 00 00 00 
0027+  448C 00 00 00 00 
0027+  4490 76 
0028+  4491             
0226   4491             
0227   4491             ;close out the basic program
0228   4491             #include "endbasic.asm"
0001+  4491             ; close out the BASIC program structure
0002+  4491             ; BASIC Variables area 
0003+  4491             Variables:      
0004+  4491 80          VariablesEnd:   DEFB $80
0005+  4492             BasicEnd:                              
0006+  4492             
0007+  4492             
0008+  4492             #END
tasm: Number of errors = 0
